version: "3.8"

networks:
  app-tier:
    driver: bridge

services:
  postgresql:
    image: "bitnami/postgresql:latest"
    ports:
      - "5432:5432"
    environment:
      - POSTGRESQL_DATABASE=
      - POSTGRESQL_USERNAME=
      - POSTGRESQL_PASSWORD=
    networks:
      - app-tier
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cms -d cms"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: /backend/
      dockerfile: /Dockerfile
    environment:
      - DB_HOST=
      - DB_PORT=
      - DB_NAME=
      - DB_USER=
      - DB_PASSWORD=
      - POD_NAME=
      - CORS_ALLOWED_ORIGINS=["http://localhost:3000"]
      - JWT_SECRET=
      - JWT_EXPIRES_IN=
      - R2_ENDPOINT=
      - R2_ACCESS_KEY_ID=
      - R2_SECRET_ACCESS_KEY=
      - R2_REGION=
      - R2_BUCKET_NAME=
      - CLOUDFLARE_KEY=
      - CLOUDFLARE_UID=
      - CLOUDFLARE_EXPIRES_IN=
    networks:
      - app-tier
    ports:
      - "3001:3000"
    depends_on:
      postgresql:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: ./backend/

  frontend:
    build:
      context: ./frontend/
      dockerfile: /Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - path: /frontend/.env
        required: true
    environment:
      - NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME}
      - NEXT_PUBLIC_APP_DESCRIPTION=${NEXT_PUBLIC_APP_DESCRIPTION}
      - NEXT_PUBLIC_APP_KEYWORDS=${NEXT_PUBLIC_APP_KEYWORDS}
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
      - NEXT_PUBLIC_REQUEST_R2_DOWNLOAD_URL=${NEXT_PUBLIC_REQUEST_R2_DOWNLOAD_URL}
      - NEXT_PUBLIC_REQUEST_R2_UPLOAD_URL=${NEXT_PUBLIC_REQUEST_R2_UPLOAD_URL}
      - NEXT_PUBLIC_REQUEST_STREAM_UPLOAD_URL=${NEXT_PUBLIC_REQUEST_STREAM_UPLOAD_URL}
      - NEXT_PUBLIC_CONTENT_UPLOAD_URL=${NEXT_PUBLIC_CONTENT_UPLOAD_URL}
      - NEXT_PUBLIC_CONTENT_GET_URL=${NEXT_PUBLIC_CONTENT_GET_URL}
      - NEXT_PUBLIC_SHORT_MAX_LENGTH=${NEXT_PUBLIC_SHORT_MAX_LENGTH}
      - NEXT_PUBLIC_MAX_TAGS=${NEXT_PUBLIC_MAX_TAGS}
      - NEXT_PUBLIC_TAG_MAX_LENGTH=${NEXT_PUBLIC_TAG_MAX_LENGTH}
      - NEXT_PUBLIC_MY_CHANNEL_MAX_CONTENT_ITEMS=${NEXT_PUBLIC_MY_CHANNEL_MAX_CONTENT_ITEMS}
    develop:
      watch:
        - action: rebuild
          path: ./frontend/
    depends_on:
      - backend